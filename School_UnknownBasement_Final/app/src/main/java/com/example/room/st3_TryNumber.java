package com.example.room;

public class st3_TryNumber {
    // 해당 java 파일을 통해 앱 내부에서 4가지의 역할을 맡을 수 있다.
    /*
    1. 사용자가 단서를 눌렀을 때 1회성 토스트 메세지를 띄울지? 말지?
    2. 사용자가 해당 맵에 들어왔을 때, 스토리 전개를 할지? 말지?
    3. 사용자가 힌트를 달라고 요구 했을 때, 힌트를 몇 번 사용했는지 알려주는 지표.
    4. 사용자가에게 제공할 힌트가 QUiz1을 위한 힌트인지, Quiz2를 위한 힌트인지 판별 후 해당 퀴즈의 힌트를 넘겨주는 지표.


    int 변수로 통일하여
        - 0 ~ N : N번 시도했다는 횟수를 나타낼 수 있다.
        - 0 : false의 의미 (해결하지 못함)
          1 : true의 의미 (해결함)
    다음과 같은 의미들을 통합하였다.


    Activity와의 상호작용은 다음과 같다.
    만약 사용자가 버튼을 누르면 onClick 안에 해당 전역변수++; 을 시킨다. -> 이미 한번 봤다는 뜻.
    만약 사용자가 Quiz1을 해결하면, 전역변수++; 을 시킨다. (0에서 1로 변화) -> 해결했다는 뜻.
    */

    // 첫 번째, 1회성 Toast 메세지를 출력할지 말지 선택하기 위한 변수
    // 0이라면, 아직 보지 않은 상태. 따라서 이 때는 토스트 메세지를 출력한다.
    public static int st3_ht1_try = 0; // 단서 1을 위한 전역변수 (원소주기율표)
    public static int st3_ht2_try = 0; // 단서 2를 위한 전역변수 (쪽지시험)
    public static int st3_ht3_try = 0; // 단서 3을 위한 전역변수 (학생끼리 주고받은 쪽지)
    public static int st3_ht4_try = 0; // 단서 4를 위한 전역변수 (사탄 책)
    public static int st3_ht5_try = 0; // 단서 5를 위한 전역변수 (숫자 적힌 쪽지)

    // 두 번째, 힌트 버튼 사용을 통제하기 위한 변수.
    // 0이라면, 아직 힌트 달라고 요청하지 않은 상태.
    // 1이라면, 힌트 요청을 1회 한 상태.
    // 2라면, 힌트 요청을 2회 한 상태.
    // 3이상이면, 힌트 요청을 2회 넘게 한 상태. -> room 컨셉 상 2회 최대이므로 힌트 제공이 불가능하다.
    public static int st3_htBtn_try = 0;

    // 세 번째, 1회성 스토리 메세지를 출력할지 말지 선택하기 위한 변수
    // 0이라면 처음으로 화면을 들어온 경우 -> st3_gv.java를 통해 .txt의 String을 전달한다.
    // 0보다 크다면 같은 스토리를 보여줄 필요가 없다.
    public static int st3_center_try = 0; // 센터 화면 들어온 횟수
    public static int st3_left_try = 0; // 왼쪽(캐비넷) 화면 들어온 횟수
    public static int st3_right_try = 0; // 오른쪽(학생들 책상) 화면 들어온 횟수

    // 네 번째, 사용자가 힌트를 눌렀을 때 간접적으로 어떤 퀴즈를 위한 힌트를 줄지 설정하는 변수.
    /*
       quiz1_solved == 0이라면, 아직 Quiz1을 풀지 못한 상태.
       stage 컨셉 상 quiz1을 풀고 quiz2를 풀어야 하기 때문에,
       quiz1을 위한 힌트를 전해주도록 한다.
     */
    /*
       quiz1_solved == 1이라면, Quiz1은 풀었으나 Quiz2를 풀지 못한 상태.
       따라서 힌트를 누르면 Quiz2를 위한 힌트를 전해주도록 한다.
     */
    public static int st3_quiz1_solved = 0;
}
